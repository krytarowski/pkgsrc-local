$NetBSD$

--- src/VBox/Runtime/Makefile.kmk.orig	2015-07-10 23:31:43.000000000 +0900
+++ src/VBox/Runtime/Makefile.kmk	2015-09-26 00:51:03.000000000 +0900
@@ -146,6 +146,12 @@ common/misc/buildconfig.cpp_DEFS = \
 	IPRT_BLDCFG_TYPE=\"$(KBUILD_TYPE)\"
 
 #
+# Set the defines that utf8-posix.cpp needs. It's used by several targets.
+#
+r3/posix/utf8-posix.cpp_DEFS.freebsd = $(VBOX_ICONV_DEFS)
+r3/posix/utf8-posix.cpp_DEFS.netbsd = $(VBOX_ICONV_DEFS)
+
+#
 # Unicode Specification reader used to regenerate unidata-*.cpp.
 #
 uniread_TEMPLATE = VBoxBldProg
@@ -1022,7 +1028,79 @@ RuntimeR3_SOURCES.freebsd = \
 	r3/posix/RTMemProtect-posix.cpp \
 	r3/posix/RTPathUserHome-posix.cpp \
 	r3/posix/RTSystemQueryOSInfo-posix.cpp \
-	r3/posix/RTSystemQueryTotalRam-posix.cpp \
+	r3/freebsd/RTSystemQueryTotalRam-freebsd.cpp \
+	r3/posix/RTTimeNow-posix.cpp \
+	r3/posix/RTTimeSet-posix.cpp \
+	r3/posix/dir-posix.cpp \
+	r3/posix/env-posix.cpp \
+	r3/posix/errvars-posix.cpp \
+	r3/posix/fileio-posix.cpp \
+	r3/posix/fileio2-posix.cpp \
+	r3/posix/filelock-posix.cpp \
+	r3/posix/fs-posix.cpp \
+	r3/posix/fs2-posix.cpp \
+	r3/posix/fs3-posix.cpp \
+	r3/posix/ldrNative-posix.cpp \
+	r3/posix/rtmempage-exec-mmap-heap-posix.cpp \
+	r3/posix/rtmemlocked-posix.cpp \
+	r3/posix/path-posix.cpp \
+	r3/posix/path2-posix.cpp \
+	r3/posix/pathhost-posix.cpp \
+	r3/posix/RTPathUserDocuments-posix.cpp \
+	r3/posix/pipe-posix.cpp \
+	r3/posix/process-posix.cpp \
+	r3/posix/process-creation-posix.cpp \
+	r3/posix/rand-posix.cpp \
+	r3/posix/semevent-posix.cpp \
+	r3/posix/semeventmulti-posix.cpp \
+	r3/posix/semmutex-posix.cpp \
+	r3/posix/semrw-posix.cpp \
+	r3/posix/symlink-posix.cpp \
+	r3/posix/thread-posix.cpp \
+	r3/posix/thread2-posix.cpp \
+	r3/posix/time-posix.cpp \
+	r3/posix/timelocal-posix.cpp \
+	r3/posix/timer-posix.cpp \
+	r3/posix/tls-posix.cpp \
+	r3/posix/utf8-posix.cpp
+
+RuntimeR3_SOURCES.netbsd = \
+	generic/cdrom-generic.cpp \
+	generic/RTDirQueryInfo-generic.cpp \
+	generic/RTDirSetTimes-generic.cpp \
+	generic/RTFileMove-generic.cpp \
+	generic/RTLogWriteDebugger-generic.cpp \
+	generic/RTPathAbs-generic.cpp \
+	generic/RTPathGetCurrentOnDrive-generic.cpp \
+	generic/RTSemEventMultiWait-2-ex-generic.cpp \
+	generic/RTSemEventMultiWaitNoResume-2-ex-generic.cpp \
+	generic/RTSystemQueryDmiString-generic.cpp \
+	generic/RTSystemShutdown-generic.cpp \
+	generic/RTThreadGetAffinity-stub-generic.cpp \
+	generic/RTThreadSetAffinity-stub-generic.cpp \
+	generic/RTThreadSetAffinityToCpu-generic.cpp \
+	generic/RTTimeLocalNow-generic.cpp \
+	generic/RTTimerCreate-generic.cpp \
+	generic/RTUuidCreate-generic.cpp \
+	generic/mppresent-generic.cpp \
+	generic/sched-generic.cpp \
+	generic/utf16locale-generic.cpp \
+	generic/uuid-generic.cpp \
+	generic/RTMpCpuId-generic.cpp \
+	generic/RTMpGetCoreCount-generic.cpp \
+	generic/RTMpGetOnlineCoreCount-generic.cpp \
+	generic/RTProcDaemonize-generic.cpp \
+	generic/RTProcIsRunningByName-generic.cpp \
+	generic/RTThreadGetNativeState-generic.cpp \
+	r3/freebsd/mp-freebsd.cpp \
+	r3/freebsd/rtProcInitExePath-freebsd.cpp \
+	r3/generic/allocex-r3-generic.cpp \
+	r3/posix/RTFileQueryFsSizes-posix.cpp \
+	r3/posix/RTHandleGetStandard-posix.cpp \
+	r3/posix/RTMemProtect-posix.cpp \
+	r3/posix/RTPathUserHome-posix.cpp \
+	r3/posix/RTSystemQueryOSInfo-posix.cpp \
+	r3/freebsd/RTSystemQueryTotalRam-freebsd.cpp \
 	r3/posix/RTTimeNow-posix.cpp \
 	r3/posix/RTTimeSet-posix.cpp \
 	r3/posix/dir-posix.cpp \
@@ -1333,6 +1411,8 @@ VBoxRT_SOURCES.darwin         += \
 	r3/posix/fileaio-posix.cpp
 VBoxRT_SOURCES.freebsd        += \
 	r3/freebsd/fileaio-freebsd.cpp
+VBoxRT_SOURCES.netbsd        += \
+	r3/freebsd/fileaio-freebsd.cpp
 VBoxRT_INCS                   := $(RuntimeR3_INCS)
 VBoxRT_INCS.$(KBUILD_TARGET)  := $(RuntimeR3_INCS.$(KBUILD_TARGET))
 VBoxRT_INCS.$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH) := $(RuntimeR3_INCS.$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH))
@@ -1367,6 +1447,9 @@ VBoxRT_LIBS.darwin             = \
 VBoxRT_LIBS.freebsd            = \
 	iconv \
 	rt
+VBoxRT_LIBS.netbsd            = \
+	iconv \
+	rt
 VBoxRT_LIBS.haiku              = \
 	iconv
 VBoxRT_LIBS.solaris            = \
@@ -1469,6 +1552,9 @@ VBoxRT-x86_LIBS.darwin             = \
 VBoxRT-x86_LIBS.freebsd            = \
 	iconv \
 	rt
+VBoxRT-x86_LIBS.netbsd            = \
+	iconv \
+	rt
 VBoxRT-x86_LIBS.haiku              = \
 	iconv
 VBoxRT-x86_LIBS.solaris            = \
@@ -1644,7 +1730,7 @@ RuntimeR0_SOURCES      := \
 	\
 	$(RuntimeNoCrt_SOURCES)
 
-if1of ($(KBUILD_TARGET), darwin solaris freebsd)
+if1of ($(KBUILD_TARGET), darwin solaris freebsd netbsd)
 RuntimeR0_SOURCES += \
 	common/math/gcc/adddi3.c \
 	common/math/gcc/anddi3.c \
@@ -1721,6 +1807,8 @@ RuntimeR0Drv_DEFS.linux = MODULE KBUILD_
 RuntimeR0Drv_INCS      := $(PATH_SUB_CURRENT) include
 RuntimeR0Drv_INCS.freebsd = \
 	$(PATH_STAGE)/gen-sys-hdrs
+RuntimeR0Drv_INCS.netbsd = \
+	$(PATH_STAGE)/gen-sys-hdrs
 RuntimeR0Drv_INCS.linux = \
 	r0drv/linux
 RuntimeR0Drv_INCS.solaris = \
@@ -2138,6 +2226,40 @@ RuntimeR0Drv_SOURCES.freebsd = \
 	r0drv/memobj-r0drv.cpp \
 	r0drv/powernotification-r0drv.c
 
+RuntimeR0Drv_SOURCES.netbsd = \
+	common/misc/thread.cpp \
+	common/string/memchr.asm \
+	common/string/memmove.asm \
+	common/string/strpbrk.cpp \
+	common/string/memcmp.asm \
+	common/string/strchr.asm \
+	generic/RTAssertShouldPanic-generic.cpp \
+	generic/RTLogWriteDebugger-generic.cpp \
+	generic/RTLogWriteStdOut-stub-generic.cpp \
+	generic/RTTimerCreate-generic.cpp \
+	generic/mppresent-generic.cpp \
+	r0drv/generic/RTMpIsCpuWorkPending-r0drv-generic.cpp \
+	r0drv/generic/mpnotification-r0drv-generic.cpp \
+	r0drv/generic/threadctxhooks-r0drv-generic.cpp \
+	r0drv/freebsd/alloc-r0drv-freebsd.c \
+	r0drv/freebsd/assert-r0drv-freebsd.c \
+	r0drv/freebsd/initterm-r0drv-freebsd.c \
+	r0drv/freebsd/memobj-r0drv-freebsd.c \
+	r0drv/freebsd/memuserkernel-r0drv-freebsd.c \
+	r0drv/freebsd/process-r0drv-freebsd.c \
+	r0drv/freebsd/semevent-r0drv-freebsd.c \
+	r0drv/freebsd/semeventmulti-r0drv-freebsd.c \
+	r0drv/freebsd/semfastmutex-r0drv-freebsd.c \
+	r0drv/freebsd/semmutex-r0drv-freebsd.c \
+	r0drv/freebsd/spinlock-r0drv-freebsd.c \
+	r0drv/freebsd/thread-r0drv-freebsd.c \
+	r0drv/freebsd/thread2-r0drv-freebsd.c \
+	r0drv/freebsd/time-r0drv-freebsd.c \
+	r0drv/freebsd/mp-r0drv-freebsd.c \
+	generic/timer-generic.cpp \
+	r0drv/memobj-r0drv.cpp \
+	r0drv/powernotification-r0drv.c
+
 RuntimeR0Drv_SOURCES.solaris = \
 	common/misc/thread.cpp \
 	common/string/memchr.asm \
@@ -2210,6 +2332,9 @@ RuntimeR0Drv_ORDERDEPS.freebsd = \
 	$(PATH_STAGE)/gen-sys-hdrs/bus_if.h \
 	$(PATH_STAGE)/gen-sys-hdrs/device_if.h
 
+RuntimeR0Drv_ORDERDEPS.netbsd = \
+	$(PATH_STAGE)/gen-sys-hdrs/bus_if.h \
+	$(PATH_STAGE)/gen-sys-hdrs/device_if.h
 
 #
 # RuntimeGuestR0 - Guest driver runtime.
@@ -2305,7 +2430,7 @@ ifdef VBOX_WITH_RAW_MODE
   RuntimeRC_SOURCES += os2/sys0.asm
  endif
 
- if1of ($(KBUILD_TARGET), darwin solaris freebsd)
+ if1of ($(KBUILD_TARGET), darwin solaris freebsd netbsd)
   RuntimeRC_SOURCES += \
  	common/math/gcc/adddi3.c \
  	common/math/gcc/anddi3.c \
@@ -2453,7 +2578,7 @@ $(IPRT_OUT_DIR)/errmsgvboxcomdata.h.ts +
 	$(QUIET)$(CP) --changed -fv $(IPRT_OUT_DIR)/errmsgvboxcomdata.h.ts $(IPRT_OUT_DIR)/errmsgvboxcomdata.h
 
 
-if "$(KBUILD_TARGET)" == "freebsd"
+if "$(KBUILD_TARGET)" == "freebsd" || "$(KBUILD_TARGET)" == "netbsd"
 #
 # FreeBSDGeneratedKernelHeaders - Generate some kernel interface headers.
 #
